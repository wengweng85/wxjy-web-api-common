<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.insigma.mvc.dao.common.fileupload.ApiFileUploadMapper">

    <!-- 获取文件类型信息 -->
    <select id="getFileTypeInfo" resultType="SFileType" parameterType="String">
        SELECT
            businesstype,
            typename,
            filemaxnum,
            filemaxsize
        FROM
          s_filetype a
        WHERE
          a.businesstype = #{businesstype}
    </select>

    <!-- 保存文件上传记录 -->
    <insert id="saveFileRecord"  parameterType="SFileRecord">
        <selectKey resultType="java.lang.String" order="BEFORE" keyProperty="file_uuid">
            SELECT sys_guid() FROM dual
        </selectKey>
        INSERT INTO
            s_file_record(file_uuid,file_name,file_length,file_status,file_path,file_addtime,file_type,file_rel_path)
        VALUES
            (#{file_uuid},#{file_name},#{file_length},#{file_status},#{file_path},sysdate,#{file_type},#{file_rel_path})
    </insert>

    <!-- 保存业务记录 -->
    <insert id="saveBusRecord"  parameterType="SFileRecord">
        <selectKey resultType="String" order="BEFORE" keyProperty="bus_uuid">
            SELECT sys_guid() from dual
        </selectKey>
        INSERT INTO
          S_BUS_FILE_RECORD(bus_uuid, file_uuid, file_bus_id, file_bus_type, bus_addtime, file_bus_name, file_bus_description)
        VALUES
          (#{bus_uuid}, #{file_uuid}, #{file_bus_id}, #{file_bus_type}, sysdate, #{file_bus_name}, #{file_bus_description})
    </insert>

    <!-- 更新业务记录 -->
    <update id="updateBusRecord" parameterType="SFileRecord">
        UPDATE
            S_BUS_FILE_RECORD
        SET
            file_uuid = #{file_uuid},
            bus_addtime = sysdate,
            file_bus_name = #{file_bus_name}
        WHERE
            bus_uuid = #{bus_uuid}
    </update>

    <!-- getFileUploadRecordByFileMd5 -->
    <select id="getFileUploadRecordByFileMd5" parameterType="String" resultType="SFileRecord">
        SELECT * FROM s_file_record  WHERE file_md5=#{file_md5}
    </select>

    <!-- 通过id查询-->
    <select id="getBusFileRecordByBusId" parameterType="String" resultType="SFileRecord">
        SELECT
            a.file_rel_path,
            b.bus_uuid,
            a.file_uuid,
            file_name,
            file_length,
            file_status,
            file_path,
            file_addtime,
            file_type,
            bus_uuid,
            b.file_bus_id,
            b.file_bus_type
        FROM
            s_file_record a,
            s_bus_file_record b
        WHERE
            a.file_uuid=b.file_uuid AND
            b.bus_uuid=#{bus_uuid}
    </select>

    <!-- 通过id查询-->
    <select id="getBusFileRecordListByBusId" parameterType="String" resultType="SFileRecord">
        SELECT
            b.file_bus_id,
            b.bus_uuid,
            a.file_uuid,
            a.file_name,
            a.file_length,
            a.file_status,
            a.file_addtime,
            a.file_type,
            a.file_path,
            a.file_rel_path,
            (SELECT code_name FROM code_value t WHERE t.code_type='FILE_BUS_TYPE' AND code_value=b.file_bus_type) file_bus_type
        FROM
            s_file_record  a, s_bus_file_record b
        WHERE
            a.file_uuid=b.file_uuid AND
            b.file_bus_id=#{file_bus_id}
        <if test="file_bus_type != null and file_bus_type != null">
            AND b.file_bus_type =#{file_bus_type}
        </if>
        ORDER BY file_addtime DESC
    </select>

    <!-- 通过bus_uuid删除文件业务记录 -->
    <delete id="deleteFileByBusUuid" parameterType="String" >
        DELETE FROM s_bus_file_record t where t.bus_uuid = #{bus_uuid}
    </delete>

    <!-- 批量删除 -->
    <delete id="batDeleteData"  parameterType="String" >
        DELETE FROM s_bus_file_record WHERE bus_uuid IN
        <foreach item="selectnodes" collection="array" open="(" separator="," close=")">
            #{selectnodes}
        </foreach>
    </delete>

    <!-- 通过文件id数组更新业务id及业务状态为有效状态 -->
    <update id="batupdateBusIdByBusUuidArray" >
        UPDATE  s_bus_file_record  t SET t.file_bus_id=#{file_bus_id} WHERE bus_uuid IN
        <foreach item="bus_uuid" collection="bus_uuids"   index="index" open="(" separator="," close=")">
            #{bus_uuid}
        </foreach>
    </update>

    <!-- 通过file_uuid删除文件记录 -->
    <delete id="deleteFileByFileUuid" parameterType="String" >
        DELETE FROM s_file_record t WHERE t.file_uuid=#{file_uuid}
    </delete>
    
     <!-- 保存excel上传记录状态表 -->
	<insert id="saveExelBatch"  parameterType="SysExcelBatch">
	    <selectKey resultType="java.lang.String" order="BEFORE" keyProperty="excel_batch_id"> 
            SELECT sys_guid() from dual 
        </selectKey>
		insert into s_excel_batch(
			excel_batch_id,
			excel_batch_number,
			excel_batch_begin_time,
			excel_batch_status,
			excel_batch_file_path,
			excel_batch_file_name,
			excel_batch_file_length,
			excel_batch_excel_type,
			excel_batch_aae011
		)
		values (
		    #{excel_batch_id},
			#{excel_batch_number},
			sysdate,
			'0',
			#{excel_batch_file_path},
			#{excel_batch_file_name},
			#{excel_batch_file_length},
			#{excel_batch_excel_type},
			#{excel_batch_aae011}
		)
	</insert>
	
	
    <!-- 更新上传状态 -->
    <update id="updateExelBatch" parameterType="SysExcelBatch">
      update s_excel_batch   
      <set>
          excel_batch_end_time=sysdate,excel_batch_cost=round((sysdate-excel_batch_begin_time)*24*60*60),
	      <if test="excel_batch_total_count != null">
	        excel_batch_total_count = #{excel_batch_total_count,jdbcType=INTEGER},
	      </if>
	      <if test="excel_batch_rt_code != null">
	        excel_batch_rt_code = #{excel_batch_rt_code,jdbcType=VARCHAR},
	      </if>
	      <if test="excel_batch_rt_msg != null">
	        excel_batch_rt_msg = #{excel_batch_rt_msg,jdbcType=VARCHAR},
	      </if>
	      <if test="excel_batch_error_count != null">
	        excel_batch_error_count = #{excel_batch_error_count,jdbcType=INTEGER},
	      </if>
	      <if test="excel_batch_status != null">
	        excel_batch_status = #{excel_batch_status,jdbcType=VARCHAR},
	      </if>
	      <if test="excel_batch_data_status != null">
	        excel_batch_data_status = #{excel_batch_data_status,jdbcType=INTEGER},
	      </if>
      </set>
    where excel_batch_id = #{excel_batch_id,jdbcType=VARCHAR}
  </update>
  
  
  <!-- 更新错误文件生成路径及生成状态 -->
  <update id="updateExelBatchErrorFilePath" parameterType="SysExcelBatch">
      update s_excel_batch 
      <set>
	      <if test="excel_error_file_path != null">
	        excel_error_file_path = #{excel_error_file_path,jdbcType=INTEGER},
	      </if>
	      <if test="excel_error_file_download != null">
	        excel_error_file_download = #{excel_error_file_download,jdbcType=VARCHAR},
	      </if>
      </set>
      where  excel_batch_number=#{excel_batch_number} 
  </update>
  
  
  <!-- 通过编号获取批次号 -->
  <select id="getExcelBatchById"  parameterType="String" resultType="SysExcelBatch">
   select 
    excel_batch_id,
	excel_batch_number 
	from s_excel_batch 
	where excel_batch_id=#{excel_batch_id}		
  </select>
  
  
  <!--通过批次号获取批次表相关信息 -->
  <select id="getExcelBatchByNumber"  parameterType="String" resultType="SysExcelBatch">
   select 
	    excel_batch_id,
		excel_batch_number,
		excel_batch_file_name,
		excel_error_file_download,
		excel_error_file_path    
	from s_excel_batch 
	where excel_batch_number=#{excel_batch_number}		
  </select>
  
  
  
  <!-- 分页查询 -->
  <select id="getExcelBatchList"  parameterType="SysExcelBatch" resultType="SysExcelBatch">
   select 
        excel_batch_id,
	    excel_batch_number,
	    to_char(excel_batch_begin_time,'yyyy-MM-dd HH24:mi:ss') excel_batch_begin_time_string,
	    excel_batch_total_count,
	    excel_batch_error_count,
	    excel_batch_cost,
	    excel_batch_status,
	    excel_batch_rt_code,
	    excel_batch_rt_msg,
	    excel_error_file_download,
	    excel_batch_data_status,
	    excel_batch_file_name  
  from s_excel_batch t  where t.excel_batch_excel_type =#{excel_batch_excel_type} order by excel_batch_number desc    
  </select>
  
  
  <!-- 通过批次号删除批次信息 -->
  <delete id="deleteExcelBatchByNumber"  parameterType="String">
     delete from s_excel_batch t where t.excel_batch_number=#{excel_batch_number}
  </delete>

</mapper>